name: 'Git matching commits'
author: Rick Meneely <rick@meneely.com>
branding:
  icon: filter
  color: purple
description: Returns a string with commits in the current repository with messages matching a regular expression"
inputs:
  path:
    description: The path to the repository
    default: '.'
    required: false
  start_tag_pattern:
    description: A regex to match the starting tag
    default: 'v[0-9]*.[0-9]*.[0-9]'
    required: false
  end_tag_pattern:
    description: A regex to match the ending tag (defaults to HEAD)
    default: ''
    required: false
  commit_message_pattern:
    description: A regex to match commit messages
    default: ''
    required: false
  commit_type:
    description: The type of commit to match - merge|all
    default: 'merge'
    required: false
  github_labels:
    description: Comma separated List of GitHub Pull Request labels to match
    default: ''
    required: false
  github_repository:
    description: <organization>/<repository> to search for Pull Requests
    default: ''
    required: false
  github_token:
    description: GitHub token to use for API calls
    default: ''
    required: false
  release_notes_file:
    description: GitHub release notes file
    default: ''
    required: false
outputs:
  commits:
    description: 'Returns a space separated list of found commitSHA values'
    value: ${{ steps.git-matching-commits.outputs.commits }}
  count:
    description: 'Returns the number of commits found'
    value: ${{ steps.git-matching-commits.outputs.count }}
  first_commit:
    description: 'Returns the first commitSHA found'
    value: ${{ steps.git-matching-commits.outputs.first_commit }}
  last_commit:
    description: 'Returns the last commitSHA found'
    value: ${{ steps.git-matching-commits.outputs.last_commit }}
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
      working-directory: ${{ github.action_path }}
      shell: bash
    - id: git-matching-commits
      run: |
        python ${{ github.action_path }}/git-matching-commits.py \
          --path "${{ inputs.path }}" \
          --start_tag_pattern "${{ inputs.start_tag_pattern }}" \
          --end_tag_pattern "${{ inputs.end_tag_pattern }}" \
          --commit_message_pattern "${{ inputs.commit_message_pattern }}" \
          --commit_type "${{ inputs.commit_type }}" \
          --github_labels "${{ inputs.github_labels }}" \
          --github_repository "${{ inputs.github_repository }}" \
          --github_token "${{ inputs.github_token }}" \
          --release_notes_file "${{ inputs.release_notes_file }}"
      shell: bash
